#!/bin/sh


# Variables
# ------------------------------------------------------------------------------
version='0.0.1'
scratch_dir=${SCRATCH_DIR:-"$HOME/scratches"}
dot_scratch_dir="$HOME/.scratch/repos"




# Subcommands
# ------------------------------------------------------------------------------
scratch_installed() {
  if [ ! -z $1 ]; then
    local installed name
    find "$HOME/.scratch/repos" -mindepth 2 -maxdepth 2 -print0 | while IFS= read -r -d '' dir; do
      local dirname=$(basename $(dirname "$dir"))
      local basename=$(basename "$dir" | sed 's/#/ /')
      installed="$installed$(echo -e '\n' $dirname $basename)"
    done
    matches=$(echo "$installed" | awk -v to_scratch="$1" '$2== to_scratch {printf "%s %s %s\\n", $1, $2, $3}')
    number_of_matches=$(echo "$matches" | wc -l | xargs)
    ((number_of_matches=$number_of_matches-1))

    if [ "$number_of_matches" -eq 0 ]; then
      printf '%s\n  %s' "Couldn't find $1. Check what you have installed with:" "scratch list"
      return 1
    fi

    if [ "$number_of_matches" -eq 1 ]; then
      to_scratch="$(echo $matches | xargs | sed -e 's/ /\//' -e 's/ /#/')"
      name="scratch-$1-$(rand_word)"
      $(cd $scratch_dir && mkdir -p $name)
      cd "$scratch_dir/$name" && cp -R "$HOME/.scratch/repos/$to_scratch/" . && rm -rf .git
      return 0
    fi
  fi
}


# Scratch command
# ------------------------------------------------------------------------------
scratch() {
  local name
  name="scratch-$(rand_word)"
  cd $scratch_dir &&
  mkdir -p $name &&
  cd $name
  return 0
}


# Pass argv
# ------------------------------------------------------------------------------
[ "$#" -eq 0 ] && scratch && exit
case "$1" in
  -h|--help)    help;                 exit;;
  -v|--version) version;              exit;;
  list)         list;                 exit;;
  install)      install $@;           exit;;
  # *)            scratch_installed $@; exit;;
esac

